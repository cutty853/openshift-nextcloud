apiVersion: v1
kind: Template
metadata:
  name: nextcloud
  annotations:
    description: "Nextcloud - A safe home for all your data"
    tags: "fileshare,nextcloud"
iconClass: fa-cloud-upload
parameters:
- name: APPLICATION_NAME
  description: The name of the application (will also be the access subdomain)
  required: true
- name: NEXTCLOUD_CONFIG
  description: Nextcloud's PHP configuration
  required: true
- name: PVC_SIZE
  description: Nextcloud Persistent Volume size
  value: 5Gi
- name: APPLICATION_ROUTE
  description: Hostname for the nextcloud application
  required: true

objects:
# Persistent volume for the nextcloud containers
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APPLICATION_NAME}-data
    labels:
      app: ${APPLICATION_NAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${PVC_SIZE}

- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-cfg
    labels:
      app: ${APPLICATION_NAME}
  data:
    config.php: "${NEXTCLOUD_CONFIG}"

# Building nextcloud docker image
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: nextcloud
    labels:
      app: ${APPLICATION_NAME}
  spec:
    # source:
    #   git:
    #     uri: ${NEXTCLOUD_IMAGE_REPO}
    strategy:
      dockerStrategy:
        from:
            kind: DockerImage
            name: nextcloud:production
        forcePull: true
    source:
      type: "Dockerfile"
      dockerfile: "
        FROM nextcloud:production\n
        RUN sed 's/80/8080/g' -i /etc/apache2/sites-available/000-default.conf && \\\n
            sed 's/80/8080/g' -i /etc/apache2/ports.conf && \\\n
            sed -i 's/Timeout 300/Timeout 1000/g' /etc/apache2/apache2.conf
            # echo umask 002 >> /etc/apache2/envvars && \\\n
            # echo umask 002 >> /etc/profile && \\\n
            # echo umask 002 >> /etc/bash.bashrc && \\\n
            # echo 'session optional pam_umask.so' >> /etc/pam.d/common-session && \\\n
            # sed 's/UMASK\\s*022/UMASK\\t002/g' -i /etc/login.defs
        "
    output:
      to:
        kind: ImageStreamTag
        name: rebuild-nextcloud:latest
    triggers:
    - type: ConfigChange
# Deployment config for the nextcloud pod
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    template: 
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
          - name: nextcloud
            image: rebuild-nextcloud
            ports:
              - containerPort: 8080
                protocol: "TCP"
            # TODO: Voir si ces variables servent vraiment lors de l'installation et si elle devrait pas plutot etre 
            # comme ça https://github.com/nextcloud/docker/issues/420
            env:
            - name: MYSQL_HOST
              value: nextcloud-db:3306
            - name: MYSQL_USER
              value: nextcloud
              # valueFrom:
              #   secretKeyRef:
              #     key: database-user
              #     name: mariadb
            - name: MYSQL_PASSWORD
              value: azerty
              # valueFrom:
              #   secretKeyRef:
              #     key: database-password
              #     name: mariadb
            - name: MYSQL_DATABASE
              value: nextcloud_db
            volumeMounts:
            - name: source
              mountPath: /var/www/html
            - name: data
              mountPath: /var/www/html/data
              subPath: data
            - name: data
              mountPath: /var/www/html/config
              subPath: config
            # TODO: Laisser ça et voir les fichiers importants
            - name: config
              mountPath: /var/www/html/config/config.php
              subPath: config.php
            - name: data
              mountPath: /var/www/html/custom_apps
              subPath: apps
        volumes:
        - name: source
          emptyDir: {}
        - name: data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-data
        - name: config
          configMap:
            name: ${APPLICATION_NAME}-cfg
            defaultMode: 0660
    replicas: 1
    strategy:
      type: Rolling
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - nextcloud
          from:
            kind: ImageStreamTag
            name: rebuild-nextcloud:latest
# Service for the nextcloud application
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: ${APPLICATION_NAME}
# Route for the nextcloud application
- apiVersion: v1
  kind: Route
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    host: ${APPLICATION_ROUTE}
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APPLICATION_NAME}


# Persistent volume for the database containers
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APPLICATION_NAME}-db-data
    labels:
      app: ${APPLICATION_NAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 1Gi
# DeploymentConfig for the database
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-db
    labels:
      app: ${APPLICATION_NAME}
  spec:
    replicas: 1
    strategy:
      type: Rolling
    template: 
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}-db
      spec:
        containers:
          - name: mariadb
            env:
              - name: MYSQL_USER
                value: nextcloud
              - name: MYSQL_PASSWORD
                value: azerty  # TODO: CHANGE for a generated password !
              - name: MYSQL_DATABASE
                value: nextcloud_db
            volumeMounts:
              - name: data
                mountPath: /var/lib/mysql/data
        volumes:
          - name: data
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-db-data
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - mariadb
          from:
            kind: ImageStreamTag
            name: mariadb:latest  # TODO: Keep a certain version of the database ?
            namespace: openshift
# Service for the databse
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}-db
    labels:
      app: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 3306-tcp
      port: 3306
      targetPort: 3306
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}-db